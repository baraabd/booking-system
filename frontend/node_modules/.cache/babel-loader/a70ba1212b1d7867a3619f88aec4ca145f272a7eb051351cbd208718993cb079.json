{"ast":null,"code":"/* import React, { useState } from 'react';\nimport '../styles.css';  // Import the global styles\n\n\nfunction BookingForm({ onBookingSubmit }) {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [address, setAddress] = useState('');\n  const [postalCode, setPostalCode] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Submit handler for the form\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setSuccess('');\n\n    // Booking data to be sent to the backend\n    const bookingData = {\n      name,\n      email,\n      phone,\n      address,\n      postalCode,\n      date: new Date().toLocaleDateString(), // Replace with actual selected date\n      timeFrom: '10:00',  // Replace with actual selected time\n      timeTo: '11:00',    // Replace with actual selected time\n    };\n\n    try {\n      // Make a POST request to the backend API\n      const response = await fetch('http://localhost:3001/api/book', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(bookingData),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        console.log(\"BookingForm\");\n\n        setSuccess('Booking confirmed successfully!');\n        setName('');\n        setEmail('');\n        setPhone('');\n        setAddress('');\n        setPostalCode('');\n        onBookingSubmit(data.booking);  // Pass booking data back to the parent component (if needed)\n      } else {\n        console.log(\"BookingForm_Not\");\n\n        setError(data.message || 'An error occurred while confirming the booking.');\n      }\n    } catch (error) {\n      setError('An error occurred while confirming the booking.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"booking-form-container\">\n      <h2>Enter Your Details</h2>\n\n      {error && <p className=\"error\">{error}</p>}\n      {success && <p className=\"success\">{success}</p>}\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Name:</label>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Email:</label>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Phone:</label>\n          <input\n            type=\"tel\"\n            value={phone}\n            onChange={(e) => setPhone(e.target.value)}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Address:</label>\n          <input\n            type=\"text\"\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Postal Code:</label>\n          <input\n            type=\"text\"\n            value={postalCode}\n            onChange={(e) => setPostalCode(e.target.value)}\n            required\n          />\n        </div>\n\n        <button type=\"submit\" disabled={loading}>\n          {loading ? 'Booking...' : 'Confirm Booking'}\n        </button>\n      </form>\n    </div>\n  );\n}\n\n\nexport default BookingForm;\n */","map":{"version":3,"names":[],"sources":["/Users/baraabdullatif/booking-system/frontend/src/components/BookingForm.jsx"],"sourcesContent":["/* import React, { useState } from 'react';\nimport '../styles.css';  // Import the global styles\n\n\nfunction BookingForm({ onBookingSubmit }) {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [address, setAddress] = useState('');\n  const [postalCode, setPostalCode] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Submit handler for the form\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setSuccess('');\n\n    // Booking data to be sent to the backend\n    const bookingData = {\n      name,\n      email,\n      phone,\n      address,\n      postalCode,\n      date: new Date().toLocaleDateString(), // Replace with actual selected date\n      timeFrom: '10:00',  // Replace with actual selected time\n      timeTo: '11:00',    // Replace with actual selected time\n    };\n\n    try {\n      // Make a POST request to the backend API\n      const response = await fetch('http://localhost:3001/api/book', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(bookingData),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        console.log(\"BookingForm\");\n\n        setSuccess('Booking confirmed successfully!');\n        setName('');\n        setEmail('');\n        setPhone('');\n        setAddress('');\n        setPostalCode('');\n        onBookingSubmit(data.booking);  // Pass booking data back to the parent component (if needed)\n      } else {\n        console.log(\"BookingForm_Not\");\n\n        setError(data.message || 'An error occurred while confirming the booking.');\n      }\n    } catch (error) {\n      setError('An error occurred while confirming the booking.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"booking-form-container\">\n      <h2>Enter Your Details</h2>\n\n      {error && <p className=\"error\">{error}</p>}\n      {success && <p className=\"success\">{success}</p>}\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Name:</label>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Email:</label>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Phone:</label>\n          <input\n            type=\"tel\"\n            value={phone}\n            onChange={(e) => setPhone(e.target.value)}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Address:</label>\n          <input\n            type=\"text\"\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Postal Code:</label>\n          <input\n            type=\"text\"\n            value={postalCode}\n            onChange={(e) => setPostalCode(e.target.value)}\n            required\n          />\n        </div>\n\n        <button type=\"submit\" disabled={loading}>\n          {loading ? 'Booking...' : 'Confirm Booking'}\n        </button>\n      </form>\n    </div>\n  );\n}\n\n\nexport default BookingForm;\n */"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}