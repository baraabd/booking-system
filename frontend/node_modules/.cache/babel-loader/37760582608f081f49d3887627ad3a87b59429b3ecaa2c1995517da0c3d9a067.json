{"ast":null,"code":"var _jsxFileName = \"/Users/baraabdullatif/booking-system/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CalendarComponent from './components/Calendar';\nimport TimeSlots from './components/TimeSlots';\nimport BookingForm from './components/BookingForm';\nimport ServiceDetails from './components/ServiceDetails';\nimport BookingConfirmed from './components/Confirmation';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedTimeFrom, setSelectedTimeFrom] = useState('');\n  const [selectedTimeTo, setSelectedTimeTo] = useState('');\n  const [userDetails, setUserDetails] = useState(null);\n  const [serviceDetails, setServiceDetails] = useState(null);\n  const [stage, setStage] = useState(1);\n  const [discountMessage, setDiscountMessage] = useState('');\n\n  // Calendar date selection handler\n  const handleDateSelect = date => {\n    setSelectedDate(date);\n    setStage(2); // Move to TimeSlots after selecting date\n  };\n\n  // Time slot selection handler\n  const handleTimeSelect = (from, to) => {\n    setSelectedTimeFrom(from);\n    setSelectedTimeTo(to);\n    setStage(3); // Move to BookingForm after selecting time slot\n  };\n\n  // Function to check if the user exists in the system\n\n  // User details form submission handler\n  const handleProceedToService = async details => {\n    const userExists = await checkUserExists(details.email);\n    if (userExists) {\n      console.log(\"Discount 10%\");\n      setDiscountMessage('You are already in our system and get 10% discount!');\n    }\n    console.log(details);\n    setUserDetails(details);\n    setStage(4); // Move to ServiceDetails after form submission\n  };\n\n  // Function to send the booking information to the backend\n  const saveBookingToBackend = async bookingDetails => {\n    const query = `\n      mutation {\n        addBooking(\n          name: \"${bookingDetails.name}\",\n          email: \"${bookingDetails.email}\",\n          phone: \"${bookingDetails.phone}\",\n          address: \"${bookingDetails.address}\",\n          postalCode: \"${bookingDetails.postalCode}\",\n          bookingDate: \"${bookingDetails.bookingDate}\",\n          bookingStart: \"${bookingDetails.timeFrom}\",\n          bookingEnd: \"${bookingDetails.timeTo}\",\n          serviceName: \"${bookingDetails.serviceName}\",\n          servicePrice: ${bookingDetails.servicePrice},\n          totalArea: ${bookingDetails.totalArea},\n          discount: ${bookingDetails.discount},\n          amount: ${bookingDetails.amount}\n        ) {\n          id\n          name\n        }\n      }\n    `;\n    try {\n      const response = await fetch('http://localhost:4000/graphql', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to save booking');\n      }\n      const result = await response.json();\n      console.log(result); // Handle success here\n    } catch (error) {\n      console.error('Error:', error);\n      alert('There was an issue saving your booking. Please try again.');\n    }\n  };\n\n  // Service details form submission handler\n  const handleConfirmBooking = async serviceDetails => {\n    let discount = 0;\n    if (discountMessage) {\n      discount = 10; // Apply 10% discount if the user exists\n    }\n    const bookingDetails = {\n      ...userDetails,\n      // Combine user details\n      ...serviceDetails,\n      // Combine service details\n      bookingDate: selectedDate.toISOString(),\n      // Format selected date to ISO string\n      timeFrom: selectedTimeFrom,\n      // Include selected time from\n      timeTo: selectedTimeTo,\n      // Include selected time to\n      discount: discount // Apply discount if applicable\n    };\n    setServiceDetails(bookingDetails);\n\n    // Save booking to backend\n    await saveBookingToBackend(bookingDetails);\n    setStage(5); // Move to BookingConfirmed (confirmation) stage\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [stage === 1 && /*#__PURE__*/_jsxDEV(CalendarComponent, {\n      onDateSelect: handleDateSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 23\n    }, this), stage === 2 && /*#__PURE__*/_jsxDEV(TimeSlots, {\n      onTimeSelect: handleTimeSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 23\n    }, this), stage === 3 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [discountMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: discountMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(BookingForm, {\n        onProceedToService: handleProceedToService\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), stage === 4 && /*#__PURE__*/_jsxDEV(ServiceDetails, {\n      onConfirmBooking: handleConfirmBooking\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 23\n    }, this), stage === 5 && /*#__PURE__*/_jsxDEV(BookingConfirmed, {\n      bookingDetails: serviceDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NiIhxNoY8pOMWQEbovIWghlWwnk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CalendarComponent","TimeSlots","BookingForm","ServiceDetails","BookingConfirmed","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","selectedDate","setSelectedDate","selectedTimeFrom","setSelectedTimeFrom","selectedTimeTo","setSelectedTimeTo","userDetails","setUserDetails","serviceDetails","setServiceDetails","stage","setStage","discountMessage","setDiscountMessage","handleDateSelect","date","handleTimeSelect","from","to","handleProceedToService","details","userExists","checkUserExists","email","console","log","saveBookingToBackend","bookingDetails","query","name","phone","address","postalCode","bookingDate","timeFrom","timeTo","serviceName","servicePrice","totalArea","discount","amount","response","fetch","method","headers","body","JSON","stringify","ok","Error","result","json","error","alert","handleConfirmBooking","toISOString","children","onDateSelect","fileName","_jsxFileName","lineNumber","columnNumber","onTimeSelect","onProceedToService","onConfirmBooking","_c","$RefreshReg$"],"sources":["/Users/baraabdullatif/booking-system/frontend/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport CalendarComponent from './components/Calendar';\nimport TimeSlots from './components/TimeSlots';\nimport BookingForm from './components/BookingForm';\nimport ServiceDetails from './components/ServiceDetails';\nimport BookingConfirmed from './components/Confirmation';\nimport './styles.css';\n\nfunction App() {\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedTimeFrom, setSelectedTimeFrom] = useState('');\n  const [selectedTimeTo, setSelectedTimeTo] = useState('');\n  const [userDetails, setUserDetails] = useState(null);\n  const [serviceDetails, setServiceDetails] = useState(null);\n  const [stage, setStage] = useState(1);\n  const [discountMessage, setDiscountMessage] = useState('');\n\n  // Calendar date selection handler\n  const handleDateSelect = (date) => {\n    setSelectedDate(date);\n    setStage(2); // Move to TimeSlots after selecting date\n  };\n\n  // Time slot selection handler\n  const handleTimeSelect = (from, to) => {\n    setSelectedTimeFrom(from);\n    setSelectedTimeTo(to);\n    setStage(3); // Move to BookingForm after selecting time slot\n  };\n\n  // Function to check if the user exists in the system\n  \n  \n\n  // User details form submission handler\n  const handleProceedToService = async (details) => {\n    const userExists = await checkUserExists(details.email);\n    if (userExists) {\n      console.log(\"Discount 10%\");\n      setDiscountMessage('You are already in our system and get 10% discount!');\n    }\n    console.log(details);\n    setUserDetails(details);\n    setStage(4); // Move to ServiceDetails after form submission\n  };\n\n  // Function to send the booking information to the backend\n  const saveBookingToBackend = async (bookingDetails) => {\n    const query = `\n      mutation {\n        addBooking(\n          name: \"${bookingDetails.name}\",\n          email: \"${bookingDetails.email}\",\n          phone: \"${bookingDetails.phone}\",\n          address: \"${bookingDetails.address}\",\n          postalCode: \"${bookingDetails.postalCode}\",\n          bookingDate: \"${bookingDetails.bookingDate}\",\n          bookingStart: \"${bookingDetails.timeFrom}\",\n          bookingEnd: \"${bookingDetails.timeTo}\",\n          serviceName: \"${bookingDetails.serviceName}\",\n          servicePrice: ${bookingDetails.servicePrice},\n          totalArea: ${bookingDetails.totalArea},\n          discount: ${bookingDetails.discount},\n          amount: ${bookingDetails.amount}\n        ) {\n          id\n          name\n        }\n      }\n    `;\n\n    try {\n      const response = await fetch('http://localhost:4000/graphql', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ query }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to save booking');\n      }\n\n      const result = await response.json();\n      console.log(result); // Handle success here\n    } catch (error) {\n      console.error('Error:', error);\n      alert('There was an issue saving your booking. Please try again.');\n    }\n  };\n\n  // Service details form submission handler\n  const handleConfirmBooking = async (serviceDetails) => {\n    let discount = 0;\n    if (discountMessage) {\n      discount = 10; // Apply 10% discount if the user exists\n    }\n\n    const bookingDetails = {\n      ...userDetails, // Combine user details\n      ...serviceDetails, // Combine service details\n      bookingDate: selectedDate.toISOString(), // Format selected date to ISO string\n      timeFrom: selectedTimeFrom, // Include selected time from\n      timeTo: selectedTimeTo, // Include selected time to\n      discount: discount, // Apply discount if applicable\n    };\n\n    setServiceDetails(bookingDetails);\n\n    // Save booking to backend\n    await saveBookingToBackend(bookingDetails);\n\n    setStage(5); // Move to BookingConfirmed (confirmation) stage\n  };\n\n  return (\n    <div>\n      {stage === 1 && <CalendarComponent onDateSelect={handleDateSelect} />}\n      {stage === 2 && <TimeSlots onTimeSelect={handleTimeSelect} />}\n      {stage === 3 && (\n        <>\n          {discountMessage && <p>{discountMessage}</p>}\n          <BookingForm onProceedToService={handleProceedToService} />\n        </>\n      )}\n      {stage === 4 && <ServiceDetails onConfirmBooking={handleConfirmBooking} />}\n      {stage === 5 && <BookingConfirmed bookingDetails={serviceDetails} />}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}