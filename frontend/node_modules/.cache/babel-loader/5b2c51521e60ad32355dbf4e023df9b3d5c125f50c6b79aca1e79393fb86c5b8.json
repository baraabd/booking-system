{"ast":null,"code":"var _jsxFileName = \"/Users/baraabdullatif/booking-system/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CalendarComponent from './components/Calendar';\nimport TimeSlots from './components/TimeSlots';\nimport BookingForm from './components/BookingForm';\nimport ServiceDetails from './components/ServiceDetails';\nimport BookingConfirmed from './components/Confirmation';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedTimeFrom, setSelectedTimeFrom] = useState('');\n  const [selectedTimeTo, setSelectedTimeTo] = useState('');\n  const [userDetails, setUserDetails] = useState(null);\n  const [serviceDetails, setServiceDetails] = useState(null);\n  const [stage, setStage] = useState(1);\n\n  // Calendar date selection handler\n  const handleDateSelect = date => {\n    setSelectedDate(date);\n    setStage(2); // Move to TimeSlots after selecting date\n  };\n\n  // Time slot selection handler\n  const handleTimeSelect = (from, to) => {\n    setSelectedTimeFrom(from);\n    setSelectedTimeTo(to);\n    setStage(3); // Move to BookingForm after selecting time slot\n  };\n\n  // User details form submission handler\n  const handleProceedToService = details => {\n    setUserDetails(details);\n    setStage(4); // Move to ServiceDetails after form submission\n  };\n\n  // Function to send the booking information to the backend\n  // Function to send the booking information to the backend\n  const saveBookingToBackend = async bookingDetails => {\n    const query = `\n    mutation {\n      addBooking(\n        name: \"${bookingDetails.name}\",\n        email: \"${bookingDetails.email}\",\n        phone: \"${bookingDetails.phone}\",\n        address: \"${bookingDetails.address}\",\n        postalCode: \"${bookingDetails.postalCode}\",\n        bookingStart: \"${bookingDetails.timeFrom}\",\n        bookingEnd: \"${bookingDetails.timeTo}\",\n        serviceName: \"${bookingDetails.serviceName}\",\n        servicePrice: ${bookingDetails.servicePrice},\n        totalArea: ${bookingDetails.totalArea},\n        discount: ${bookingDetails.discount},\n        amount: ${bookingDetails.amount}\n      ) {\n        id\n        name\n      }\n    }\n  `;\n    try {\n      const response = await fetch('http://localhost:4000/graphql', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to save booking');\n      }\n      const result = await response.json();\n      console.log(result); // Handle success here\n    } catch (error) {\n      console.error('Error:', error);\n      alert('There was an issue saving your booking. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [stage === 1 && /*#__PURE__*/_jsxDEV(CalendarComponent, {\n      onDateSelect: handleDateSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 23\n    }, this), stage === 2 && /*#__PURE__*/_jsxDEV(TimeSlots, {\n      onTimeSelect: handleTimeSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }, this), stage === 3 && /*#__PURE__*/_jsxDEV(BookingForm, {\n      onProceedToService: handleProceedToService\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 23\n    }, this), stage === 4 && /*#__PURE__*/_jsxDEV(ServiceDetails, {\n      onConfirmBooking: handleConfirmBooking\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 23\n    }, this), stage === 5 && /*#__PURE__*/_jsxDEV(BookingConfirmed, {\n      bookingDetails: serviceDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UBHnGz31N+GwptqV8nvSORMKSeg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CalendarComponent","TimeSlots","BookingForm","ServiceDetails","BookingConfirmed","jsxDEV","_jsxDEV","App","_s","selectedDate","setSelectedDate","selectedTimeFrom","setSelectedTimeFrom","selectedTimeTo","setSelectedTimeTo","userDetails","setUserDetails","serviceDetails","setServiceDetails","stage","setStage","handleDateSelect","date","handleTimeSelect","from","to","handleProceedToService","details","saveBookingToBackend","bookingDetails","query","name","email","phone","address","postalCode","timeFrom","timeTo","serviceName","servicePrice","totalArea","discount","amount","response","fetch","method","headers","body","JSON","stringify","ok","Error","result","json","console","log","error","alert","children","onDateSelect","fileName","_jsxFileName","lineNumber","columnNumber","onTimeSelect","onProceedToService","onConfirmBooking","handleConfirmBooking","_c","$RefreshReg$"],"sources":["/Users/baraabdullatif/booking-system/frontend/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport CalendarComponent from './components/Calendar';\nimport TimeSlots from './components/TimeSlots';\nimport BookingForm from './components/BookingForm';\nimport ServiceDetails from './components/ServiceDetails';\nimport BookingConfirmed from './components/Confirmation';\nimport './styles.css';\n\nfunction App() {\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedTimeFrom, setSelectedTimeFrom] = useState('');\n  const [selectedTimeTo, setSelectedTimeTo] = useState('');\n  const [userDetails, setUserDetails] = useState(null);\n  const [serviceDetails, setServiceDetails] = useState(null);\n  const [stage, setStage] = useState(1);\n\n  // Calendar date selection handler\n  const handleDateSelect = (date) => {\n    setSelectedDate(date);\n    setStage(2);  // Move to TimeSlots after selecting date\n  };\n\n  // Time slot selection handler\n  const handleTimeSelect = (from, to) => {\n    setSelectedTimeFrom(from);\n    setSelectedTimeTo(to);\n    setStage(3);  // Move to BookingForm after selecting time slot\n  };\n\n  // User details form submission handler\n  const handleProceedToService = (details) => {\n    setUserDetails(details);\n    setStage(4);  // Move to ServiceDetails after form submission\n  };\n\n  // Function to send the booking information to the backend\n  // Function to send the booking information to the backend\nconst saveBookingToBackend = async (bookingDetails) => {\n  const query = `\n    mutation {\n      addBooking(\n        name: \"${bookingDetails.name}\",\n        email: \"${bookingDetails.email}\",\n        phone: \"${bookingDetails.phone}\",\n        address: \"${bookingDetails.address}\",\n        postalCode: \"${bookingDetails.postalCode}\",\n        bookingStart: \"${bookingDetails.timeFrom}\",\n        bookingEnd: \"${bookingDetails.timeTo}\",\n        serviceName: \"${bookingDetails.serviceName}\",\n        servicePrice: ${bookingDetails.servicePrice},\n        totalArea: ${bookingDetails.totalArea},\n        discount: ${bookingDetails.discount},\n        amount: ${bookingDetails.amount}\n      ) {\n        id\n        name\n      }\n    }\n  `;\n\n  try {\n    const response = await fetch('http://localhost:4000/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ query }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to save booking');\n    }\n\n    const result = await response.json();\n    console.log(result);  // Handle success here\n  } catch (error) {\n    console.error('Error:', error);\n    alert('There was an issue saving your booking. Please try again.');\n  }\n};\n\n  return (\n    <div>\n      {stage === 1 && <CalendarComponent onDateSelect={handleDateSelect} />}\n      {stage === 2 && <TimeSlots onTimeSelect={handleTimeSelect} />}\n      {stage === 3 && <BookingForm onProceedToService={handleProceedToService} />}\n      {stage === 4 && <ServiceDetails onConfirmBooking={handleConfirmBooking} />}\n      {stage === 5 && <BookingConfirmed bookingDetails={serviceDetails} />}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}