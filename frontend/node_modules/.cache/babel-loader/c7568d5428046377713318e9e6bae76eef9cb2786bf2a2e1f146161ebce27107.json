{"ast":null,"code":"var _jsxFileName = \"/Users/baraabdullatif/booking-system/frontend/src/components/TimeSlots.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport ReactSlider from 'react-slider';\nimport { setSelectedTime } from '../store'; // Import the action\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TimeSlots({\n  setStage\n}) {\n  _s();\n  const [timeRange, setTimeRange] = useState([480, 1020]); // 8:00 AM to 5:00 PM\n  const dispatch = useDispatch();\n  const handleConfirmTime = () => {\n    const from = convertMinutesToTime(timeRange[0]);\n    const to = convertMinutesToTime(timeRange[1]);\n    dispatch(setSelectedTime({\n      from,\n      to\n    })); // Dispatch the selected time range\n    setStage(3); // Move to the next stage\n  };\n  const convertMinutesToTime = minutes => {\n    const hours = Math.floor(minutes / 60);\n    const mins = minutes % 60;\n    const formattedMinutes = mins.toString().padStart(2, '0');\n    const period = hours >= 12 ? 'PM' : 'AM';\n    const hour12 = hours % 12 === 0 ? 12 : hours % 12;\n    return `${hour12}:${formattedMinutes} ${period}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"time-slots-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select Time Slot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n      value: timeRange,\n      onChange: value => setTimeRange(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConfirmTime,\n      children: \"Confirm Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(TimeSlots, \"yCtDIwzJFw6cEmaQfSKGHyx6dK0=\", false, function () {\n  return [useDispatch];\n});\n_c = TimeSlots;\nexport default TimeSlots;\nvar _c;\n$RefreshReg$(_c, \"TimeSlots\");","map":{"version":3,"names":["React","useState","useDispatch","ReactSlider","setSelectedTime","jsxDEV","_jsxDEV","TimeSlots","setStage","_s","timeRange","setTimeRange","dispatch","handleConfirmTime","from","convertMinutesToTime","to","minutes","hours","Math","floor","mins","formattedMinutes","toString","padStart","period","hour12","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/baraabdullatif/booking-system/frontend/src/components/TimeSlots.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport ReactSlider from 'react-slider';\nimport { setSelectedTime } from '../store'; // Import the action\n\nfunction TimeSlots({ setStage }) {\n  const [timeRange, setTimeRange] = useState([480, 1020]); // 8:00 AM to 5:00 PM\n  const dispatch = useDispatch();\n\n  const handleConfirmTime = () => {\n    const from = convertMinutesToTime(timeRange[0]);\n    const to = convertMinutesToTime(timeRange[1]);\n    dispatch(setSelectedTime({ from, to })); // Dispatch the selected time range\n    setStage(3); // Move to the next stage\n  };\n\n  const convertMinutesToTime = (minutes) => {\n    const hours = Math.floor(minutes / 60);\n    const mins = minutes % 60;\n    const formattedMinutes = mins.toString().padStart(2, '0');\n    const period = hours >= 12 ? 'PM' : 'AM';\n    const hour12 = hours % 12 === 0 ? 12 : hours % 12;\n    return `${hour12}:${formattedMinutes} ${period}`;\n  };\n\n  return (\n    <div className=\"time-slots-container\">\n      <h2>Select Time Slot</h2>\n      <ReactSlider\n        value={timeRange}\n        onChange={(value) => setTimeRange(value)}\n      />\n      <button onClick={handleConfirmTime}>Confirm Time</button>\n    </div>\n  );\n}\n\nexport default TimeSlots;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,WAAW,MAAM,cAAc;AACtC,SAASC,eAAe,QAAQ,UAAU,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,SAASA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC/B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;EACzD,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,IAAI,GAAGC,oBAAoB,CAACL,SAAS,CAAC,CAAC,CAAC,CAAC;IAC/C,MAAMM,EAAE,GAAGD,oBAAoB,CAACL,SAAS,CAAC,CAAC,CAAC,CAAC;IAC7CE,QAAQ,CAACR,eAAe,CAAC;MAAEU,IAAI;MAAEE;IAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACzCR,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACf,CAAC;EAED,MAAMO,oBAAoB,GAAIE,OAAO,IAAK;IACxC,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,EAAE,CAAC;IACtC,MAAMI,IAAI,GAAGJ,OAAO,GAAG,EAAE;IACzB,MAAMK,gBAAgB,GAAGD,IAAI,CAACE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACzD,MAAMC,MAAM,GAAGP,KAAK,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI;IACxC,MAAMQ,MAAM,GAAGR,KAAK,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,GAAGA,KAAK,GAAG,EAAE;IACjD,OAAO,GAAGQ,MAAM,IAAIJ,gBAAgB,IAAIG,MAAM,EAAE;EAClD,CAAC;EAED,oBACEnB,OAAA;IAAKqB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCtB,OAAA;MAAAsB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzB1B,OAAA,CAACH,WAAW;MACV8B,KAAK,EAAEvB,SAAU;MACjBwB,QAAQ,EAAGD,KAAK,IAAKtB,YAAY,CAACsB,KAAK;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACF1B,OAAA;MAAQ6B,OAAO,EAAEtB,iBAAkB;MAAAe,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV;AAACvB,EAAA,CA9BQF,SAAS;EAAA,QAECL,WAAW;AAAA;AAAAkC,EAAA,GAFrB7B,SAAS;AAgClB,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}