{"ast":null,"code":"var _jsxFileName = \"/Users/baraabdullatif/booking-system/frontend/src/components/TimeSlots.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactSlider from 'react-slider';\nimport '../timeSlott.css'; // Import the global styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MIN_TIME = 360; // 06:00 AM\nconst MAX_TIME = 1200; // 08:00 PM\n\nfunction TimeSlots({\n  onTimeSelect\n}) {\n  _s();\n  const [timeRange, setTimeRange] = useState([480, 1020]); // Default 8:00 AM to 5:00 PM\n\n  const handleTimeRangeChange = value => {\n    setTimeRange(value);\n    const fromTime = convertMinutesToTime(value[0]);\n    const toTime = convertMinutesToTime(value[1]);\n    onTimeSelect(fromTime, toTime);\n  };\n  const convertMinutesToTime = minutes => {\n    const hours = Math.floor(minutes / 60);\n    const mins = minutes % 60;\n    const period = hours >= 12 ? 'PM' : 'AM';\n    const formattedHours = hours % 12 === 0 ? 12 : hours % 12;\n    return `${formattedHours}:${mins.toString().padStart(2, '0')} ${period}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"time-slots-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"V\\xE4lj en period som passar dig b\\xE4st!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-range-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Fr\\xE5n: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: convertMinutesToTime(timeRange[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Till: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: convertMinutesToTime(timeRange[1])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n      className: \"time-slider\",\n      thumbClassName: \"time-slider-thumb\",\n      trackClassName: \"time-slider-track\",\n      min: MIN_TIME,\n      max: MAX_TIME,\n      step: 30,\n      value: timeRange,\n      onChange: handleTimeRangeChange,\n      minDistance: 60\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(TimeSlots, \"KR39vEUs/9QXnXgxA++5MNZcsco=\");\n_c = TimeSlots;\nexport default TimeSlots;\nvar _c;\n$RefreshReg$(_c, \"TimeSlots\");","map":{"version":3,"names":["React","useState","ReactSlider","jsxDEV","_jsxDEV","MIN_TIME","MAX_TIME","TimeSlots","onTimeSelect","_s","timeRange","setTimeRange","handleTimeRangeChange","value","fromTime","convertMinutesToTime","toTime","minutes","hours","Math","floor","mins","period","formattedHours","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","thumbClassName","trackClassName","min","max","step","onChange","minDistance","_c","$RefreshReg$"],"sources":["/Users/baraabdullatif/booking-system/frontend/src/components/TimeSlots.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactSlider from 'react-slider';\nimport '../timeSlott.css';  // Import the global styles\n\nconst MIN_TIME = 360; // 06:00 AM\nconst MAX_TIME = 1200; // 08:00 PM\n\nfunction TimeSlots({ onTimeSelect }) {\n  const [timeRange, setTimeRange] = useState([480, 1020]); // Default 8:00 AM to 5:00 PM\n\n  const handleTimeRangeChange = (value) => {\n    setTimeRange(value);\n    const fromTime = convertMinutesToTime(value[0]);\n    const toTime = convertMinutesToTime(value[1]);\n    onTimeSelect(fromTime, toTime);\n  };\n\n  const convertMinutesToTime = (minutes) => {\n    const hours = Math.floor(minutes / 60);\n    const mins = minutes % 60;\n    const period = hours >= 12 ? 'PM' : 'AM';\n    const formattedHours = hours % 12 === 0 ? 12 : hours % 12;\n    return `${formattedHours}:${mins.toString().padStart(2, '0')} ${period}`;\n  };\n\n  return (\n    <div className=\"time-slots-container\">\n      <h2>Välj en period som passar dig bäst!</h2>\n      <div className=\"time-range-display\">\n        <span>Från: <strong>{convertMinutesToTime(timeRange[0])}</strong></span>\n        <span>Till: <strong>{convertMinutesToTime(timeRange[1])}</strong></span>\n      </div>\n      <ReactSlider\n        className=\"time-slider\"\n        thumbClassName=\"time-slider-thumb\"\n        trackClassName=\"time-slider-track\"\n        min={MIN_TIME}\n        max={MAX_TIME}\n        step={30}\n        value={timeRange}\n        onChange={handleTimeRangeChange}\n        minDistance={60}\n      />\n    </div>\n  );\n}\n\nexport default TimeSlots;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}