{"ast":null,"code":"var _jsxFileName = \"/Users/baraabdullatif/booking-system/frontend/src/components/TimeSlots.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactSlider from 'react-slider';\nimport '../timeSlott.css'; // Import the global styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MINUTES_IN_A_DAY = 1440;\nconst MIN_TIME = 360; // 06:00 AM\nconst MAX_TIME = 1200; // 08:00 PM\n\nfunction TimeSlots({\n  onTimeSelect\n}) {\n  _s();\n  const [timeRange, setTimeRange] = useState([480, 1020]); // Default 8:00 AM to 5:00 PM\n  const [isTimeSelected, setIsTimeSelected] = useState(false);\n  const handleTimeRangeChange = value => {\n    setTimeRange(value);\n    setIsTimeSelected(false);\n  };\n  const handleConfirmTime = () => {\n    const [from, to] = timeRange;\n    const fromTime = convertMinutesToTime(from);\n    const toTime = convertMinutesToTime(to);\n    setIsTimeSelected(true);\n    onTimeSelect(fromTime, toTime);\n  };\n  const convertMinutesToTime = minutes => {\n    const hours = Math.floor(minutes / 60);\n    const mins = minutes % 60;\n    const formattedMinutes = mins.toString().padStart(2, '0');\n    const period = hours >= 12 ? 'PM' : 'AM';\n    const hour12 = hours % 12 === 0 ? 12 : hours % 12;\n    return `${hour12}:${formattedMinutes} ${period}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slott-continer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-slots-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select Time Slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-range-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"From: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: convertMinutesToTime(timeRange[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"To: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: convertMinutesToTime(timeRange[1])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n        className: \"time-slider\",\n        thumbClassName: \"time-slider-thumb\",\n        trackClassName: \"time-slider-track\",\n        min: MIN_TIME,\n        max: MAX_TIME,\n        step: 30,\n        value: timeRange,\n        onChange: handleTimeRangeChange,\n        minDistance: 60,\n        pearling: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"confirm-time-button\",\n        onClick: handleConfirmTime,\n        children: \"Confirm Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), isTimeSelected && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmation-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Time Confirmed! Proceed to enter your details.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(TimeSlots, \"8wDZzzG7jbU9cBzKZkI2L2dTgkc=\");\n_c = TimeSlots;\nexport default TimeSlots;\nvar _c;\n$RefreshReg$(_c, \"TimeSlots\");","map":{"version":3,"names":["React","useState","ReactSlider","jsxDEV","_jsxDEV","MINUTES_IN_A_DAY","MIN_TIME","MAX_TIME","TimeSlots","onTimeSelect","_s","timeRange","setTimeRange","isTimeSelected","setIsTimeSelected","handleTimeRangeChange","value","handleConfirmTime","from","to","fromTime","convertMinutesToTime","toTime","minutes","hours","Math","floor","mins","formattedMinutes","toString","padStart","period","hour12","className","children","fileName","_jsxFileName","lineNumber","columnNumber","thumbClassName","trackClassName","min","max","step","onChange","minDistance","pearling","onClick","_c","$RefreshReg$"],"sources":["/Users/baraabdullatif/booking-system/frontend/src/components/TimeSlots.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactSlider from 'react-slider';\nimport '../timeSlott.css';  // Import the global styles\n\nconst MINUTES_IN_A_DAY = 1440;\nconst MIN_TIME = 360; // 06:00 AM\nconst MAX_TIME = 1200; // 08:00 PM\n\nfunction TimeSlots({ onTimeSelect }) {\n  const [timeRange, setTimeRange] = useState([480, 1020]); // Default 8:00 AM to 5:00 PM\n  const [isTimeSelected, setIsTimeSelected] = useState(false);\n\n  const handleTimeRangeChange = (value) => {\n    setTimeRange(value);\n    setIsTimeSelected(false);\n  };\n\n  const handleConfirmTime = () => {\n    const [from, to] = timeRange;\n    const fromTime = convertMinutesToTime(from);\n    const toTime = convertMinutesToTime(to);\n    setIsTimeSelected(true);\n    onTimeSelect(fromTime, toTime);\n  };\n\n  const convertMinutesToTime = (minutes) => {\n    const hours = Math.floor(minutes / 60);\n    const mins = minutes % 60;\n    const formattedMinutes = mins.toString().padStart(2, '0');\n    const period = hours >= 12 ? 'PM' : 'AM';\n    const hour12 = hours % 12 === 0 ? 12 : hours % 12;\n    return `${hour12}:${formattedMinutes} ${period}`;\n  };\n\n  return (\n    <div className='slott-continer'>\n    <div className=\"time-slots-container\">\n      <h2>Select Time Slot</h2>\n      <div className=\"time-range-display\">\n        <span>From: <strong>{convertMinutesToTime(timeRange[0])}</strong></span>\n        <span>To: <strong>{convertMinutesToTime(timeRange[1])}</strong></span>\n      </div>\n\n      <ReactSlider\n        className=\"time-slider\"\n        thumbClassName=\"time-slider-thumb\"\n        trackClassName=\"time-slider-track\"\n        min={MIN_TIME}\n        max={MAX_TIME}\n        step={30}\n        value={timeRange}\n        onChange={handleTimeRangeChange}\n        minDistance={60}\n        pearling\n      />\n\n      <button className=\"confirm-time-button\" onClick={handleConfirmTime}>\n        Confirm Time\n      </button>\n\n      {isTimeSelected && (\n        <div className=\"confirmation-message\">\n          <p>Time Confirmed! Proceed to enter your details.</p>\n        </div>\n      )}\n    </div>\n    </div>\n  );\n}\n\nexport default TimeSlots;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}