{"ast":null,"code":"const checkUserExists = async email => {\n  const query = `\n    query {\n      checkUserExists(email: \"${email}\")\n    }\n  `;\n  try {\n    const response = await fetch('http://localhost:4000/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query\n      })\n    });\n    const result = await response.json();\n    console.log('GraphQL Response:', result);\n    if (result.data && result.data.checkUserExists !== undefined) {\n      return result.data.checkUserExists;\n    } else {\n      throw new Error('Unexpected response structure');\n    }\n  } catch (error) {\n    console.error('Error checking user:', error);\n    return false;\n  }\n};","map":{"version":3,"names":["checkUserExists","email","query","response","fetch","method","headers","body","JSON","stringify","result","json","console","log","data","undefined","Error","error"],"sources":["/Users/baraabdullatif/booking-system/frontend/src/App.jsx"],"sourcesContent":["const checkUserExists = async (email) => {\n  const query = `\n    query {\n      checkUserExists(email: \"${email}\")\n    }\n  `;\n\n  try {\n    const response = await fetch('http://localhost:4000/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ query }),\n    });\n\n    const result = await response.json();\n    console.log('GraphQL Response:', result);\n    if (result.data && result.data.checkUserExists !== undefined) {\n      return result.data.checkUserExists;\n    } else {\n      throw new Error('Unexpected response structure');\n    }\n  } catch (error) {\n    console.error('Error checking user:', error);\n    return false;\n  }\n};\n"],"mappings":"AAAA,MAAMA,eAAe,GAAG,MAAOC,KAAK,IAAK;EACvC,MAAMC,KAAK,GAAG;AAChB;AACA,gCAAgCD,KAAK;AACrC;AACA,GAAG;EAED,IAAI;IACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;MAC5DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP;MAAM,CAAC;IAChC,CAAC,CAAC;IAEF,MAAMQ,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACpCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,MAAM,CAAC;IACxC,IAAIA,MAAM,CAACI,IAAI,IAAIJ,MAAM,CAACI,IAAI,CAACd,eAAe,KAAKe,SAAS,EAAE;MAC5D,OAAOL,MAAM,CAACI,IAAI,CAACd,eAAe;IACpC,CAAC,MAAM;MACL,MAAM,IAAIgB,KAAK,CAAC,+BAA+B,CAAC;IAClD;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,KAAK;EACd;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}