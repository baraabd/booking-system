{"ast":null,"code":"var _jsxFileName = \"/Users/baraabdullatif/booking-system/frontend/src/components/Calendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport '../Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CalendarComponent({\n  onDateSelect\n}) {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const handleDateChange = date => {\n    setSelectedDate(date);\n    onDateSelect(date);\n  };\n\n  // Helper function to determine if a date is in the past (including today)\n  const isPastDate = date => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0); // Reset time for today to compare dates\n    return date < today;\n  };\n\n  // Helper function to determine if a date is today\n  const isToday = date => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0); // Reset time for today to compare dates\n    return date.getTime() === today.getTime();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    \"aria-label\": \"Calendar container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"calendar-title\",\n      \"aria-label\": \"Select a date\",\n      children: \"V\\xE4lj ett datum som passar dig b\\xE4st!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: handleDateChange,\n      value: selectedDate,\n      className: \"custom-calendar\",\n      \"aria-label\": \"Custom calendar\",\n      minDate: new Date() // Disable selection of past dates\n      ,\n      tileClassName: ({\n        date,\n        view\n      }) => {\n        if (view === 'month') {\n          if (isPastDate(date)) {\n            return 'past-date'; // Add class for past dates\n          }\n          if (isToday(date)) {\n            return 'today-date'; // Add class for today\n          }\n          if (date.getTime() === selectedDate.getTime()) {\n            return 'selected-date'; // Add class for the selected date\n          }\n        }\n        return null;\n      },\n      tileDisabled: ({\n        date,\n        view\n      }) => view === 'month' && isPastDate(date) // Ensure past dates are disabled\n      ,\n      next2Label: null // Hide the double arrow navigation buttons\n      ,\n      prev2Label: null,\n      showNeighboringMonth: false // Hide days from neighboring months\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(CalendarComponent, \"mu4fg2bVP7ctA7Sx6pVThSFlyto=\");\n_c = CalendarComponent;\nexport default CalendarComponent;\nvar _c;\n$RefreshReg$(_c, \"CalendarComponent\");","map":{"version":3,"names":["React","useState","Calendar","jsxDEV","_jsxDEV","CalendarComponent","onDateSelect","_s","selectedDate","setSelectedDate","Date","handleDateChange","date","isPastDate","today","setHours","isToday","getTime","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","minDate","tileClassName","view","tileDisabled","next2Label","prev2Label","showNeighboringMonth","_c","$RefreshReg$"],"sources":["/Users/baraabdullatif/booking-system/frontend/src/components/Calendar.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport '../Calendar.css';  \n\nfunction CalendarComponent({ onDateSelect }) {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n    onDateSelect(date);\n  };\n\n  // Helper function to determine if a date is in the past (including today)\n  const isPastDate = (date) => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0); // Reset time for today to compare dates\n    return date < today;\n  };\n\n  // Helper function to determine if a date is today\n  const isToday = (date) => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0); // Reset time for today to compare dates\n    return date.getTime() === today.getTime();\n  };\n\n  return (\n    <div className=\"calendar-container\" aria-label=\"Calendar container\">\n      <h2 className=\"calendar-title\" aria-label=\"Select a date\">Välj ett datum som passar dig bäst!</h2>\n      <Calendar\n        onChange={handleDateChange}\n        value={selectedDate}\n        className=\"custom-calendar\"\n        aria-label=\"Custom calendar\"\n        minDate={new Date()}  // Disable selection of past dates\n        tileClassName={({ date, view }) => {\n          if (view === 'month') {\n            if (isPastDate(date)) {\n              return 'past-date';  // Add class for past dates\n            }\n            if (isToday(date)) {\n              return 'today-date';  // Add class for today\n            }\n            if (date.getTime() === selectedDate.getTime()) {\n              return 'selected-date';  // Add class for the selected date\n            }\n          }\n          return null;\n        }}\n        tileDisabled={({ date, view }) => view === 'month' && isPastDate(date)} // Ensure past dates are disabled\n        next2Label={null}  // Hide the double arrow navigation buttons\n        prev2Label={null}\n        showNeighboringMonth={false} // Hide days from neighboring months\n      />\n    </div>\n  );\n}\n\nexport default CalendarComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,kCAAkC;AACzC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,iBAAiBA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EAC3C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAIS,IAAI,CAAC,CAAC,CAAC;EAE5D,MAAMC,gBAAgB,GAAIC,IAAI,IAAK;IACjCH,eAAe,CAACG,IAAI,CAAC;IACrBN,YAAY,CAACM,IAAI,CAAC;EACpB,CAAC;;EAED;EACA,MAAMC,UAAU,GAAID,IAAI,IAAK;IAC3B,MAAME,KAAK,GAAG,IAAIJ,IAAI,CAAC,CAAC;IACxBI,KAAK,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5B,OAAOH,IAAI,GAAGE,KAAK;EACrB,CAAC;;EAED;EACA,MAAME,OAAO,GAAIJ,IAAI,IAAK;IACxB,MAAME,KAAK,GAAG,IAAIJ,IAAI,CAAC,CAAC;IACxBI,KAAK,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5B,OAAOH,IAAI,CAACK,OAAO,CAAC,CAAC,KAAKH,KAAK,CAACG,OAAO,CAAC,CAAC;EAC3C,CAAC;EAED,oBACEb,OAAA;IAAKc,SAAS,EAAC,oBAAoB;IAAC,cAAW,oBAAoB;IAAAC,QAAA,gBACjEf,OAAA;MAAIc,SAAS,EAAC,gBAAgB;MAAC,cAAW,eAAe;MAAAC,QAAA,EAAC;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClGnB,OAAA,CAACF,QAAQ;MACPsB,QAAQ,EAAEb,gBAAiB;MAC3Bc,KAAK,EAAEjB,YAAa;MACpBU,SAAS,EAAC,iBAAiB;MAC3B,cAAW,iBAAiB;MAC5BQ,OAAO,EAAE,IAAIhB,IAAI,CAAC,CAAE,CAAE;MAAA;MACtBiB,aAAa,EAAEA,CAAC;QAAEf,IAAI;QAAEgB;MAAK,CAAC,KAAK;QACjC,IAAIA,IAAI,KAAK,OAAO,EAAE;UACpB,IAAIf,UAAU,CAACD,IAAI,CAAC,EAAE;YACpB,OAAO,WAAW,CAAC,CAAE;UACvB;UACA,IAAII,OAAO,CAACJ,IAAI,CAAC,EAAE;YACjB,OAAO,YAAY,CAAC,CAAE;UACxB;UACA,IAAIA,IAAI,CAACK,OAAO,CAAC,CAAC,KAAKT,YAAY,CAACS,OAAO,CAAC,CAAC,EAAE;YAC7C,OAAO,eAAe,CAAC,CAAE;UAC3B;QACF;QACA,OAAO,IAAI;MACb,CAAE;MACFY,YAAY,EAAEA,CAAC;QAAEjB,IAAI;QAAEgB;MAAK,CAAC,KAAKA,IAAI,KAAK,OAAO,IAAIf,UAAU,CAACD,IAAI,CAAE,CAAC;MAAA;MACxEkB,UAAU,EAAE,IAAK,CAAE;MAAA;MACnBC,UAAU,EAAE,IAAK;MACjBC,oBAAoB,EAAE,KAAM,CAAC;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAChB,EAAA,CApDQF,iBAAiB;AAAA4B,EAAA,GAAjB5B,iBAAiB;AAsD1B,eAAeA,iBAAiB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}